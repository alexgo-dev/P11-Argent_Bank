swagger: '2.0'
info:
  title: Argent Bank API Documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Accounts API
      description: API for fetching user accounts
      produces:
        - application/json
      responses:
        '200':
          description: Get Accounts Successfully
          schema:
            $ref: '#/definitions/AccountsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Account Transactions API
      description: API for fetching user account transactions
      parameters:
        - in: path
          name: accountId
          description: Targeted account id
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Successfully got transactions 
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Account Transaction Details API
      description: API for fetching transaction details from user account
      parameters:
        - in: path
          name: accountId
          description: Targeted account id
          type: number
          required: true
        - in: path
          name: transactionId
          description: Targeted transaction id
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Successfully Got Transaction Details 
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Edit Transaction Category API
      description: API to edit the category of a transaction
      parameters:
        - in: path
          name: accountId
          description: Targeted account id
          type: number
          required: true
        - in: path
          name: transactionId
          description: Targeted transaction id
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Category retrieved successfully
          schema:
            $ref: '#/definitions/CategoryResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
definitions:
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  AccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            accountId:
              type: number
            accountName:
              type: string
  TransactionsResponse:
    type: object
    properties:
      transactions:
        type: array
        items:
          type: object
          properties:
            transactionId:
              type: number
            amount:
              type: number
            description:
              type: string
            date:
              type: string
  TransactionDetailsResponse:
    type: object
    properties:
      transactionDetails:
        type: object
        properties:
          transactionId:
            type: number
          accountId:
            type: number
          amount:
            type: number
          description:
            type: string
          date:
            type: string
  CategoryResponse:
    type: object
    properties:
      category:
        type: string